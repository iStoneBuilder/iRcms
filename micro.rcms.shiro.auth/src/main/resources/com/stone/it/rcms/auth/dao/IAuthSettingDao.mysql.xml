<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.stone.it.rcms.auth.dao.IAuthSettingDao">

  <delete id="deleteApiPathsNotInList">
    delete from tpl_permission_t where concat_ws('_', api_method, api_path) not in
    <foreach close=")" collection="list" item="item" open="(" separator=",">
      #{item}
    </foreach>
  </delete>

  <delete id="deleteApisRelationAuth">
    delete from tpl_role_permission_t rp where (rp.auth_code not in
    (select auth_code from tpl_permission_t p where p.auth_code is not null) or rp.role_code =
    'platformAdmin')
  </delete>

  <insert id="createApiPaths">
    insert into
    tpl_permission_t(auth_code,api_code,api_name,api_path,api_method,api_type,open_api,created_time,updated_time,created_by,updated_by)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.authCode},#{item.apiCode},#{item.apiName},#{item.apiPath,jdbcType=VARCHAR},#{item.apiMethod},
      #{item.apiType},#{item.openApi},now(),now(),#{item.createBy},#{item.updateBy})
    </foreach>
  </insert>

  <insert id="createSuperAdminAuth">
    insert into
    tpl_role_permission_t(role_code,auth_code,created_time,updated_time,created_by,updated_by)
    values
    <foreach collection="list" item="item" separator=",">
      (#{roleCode},#{item},now(),now(),'system','system')
    </foreach>
  </insert>

  <select id="getUserInfoByUserId" resultType="com.stone.it.rcms.auth.vo.AuthAccountVO">
    SELECT
    account_code as accountCode,
    account_name as accountName,
    account_type as accountType,
    password as password,
    account_roles as accountRoles,
    enterprise_id as enterpriseId
    FROM
    tpl_account_t
    WHERE
    account_code = #{accountCode}
  </select>

  <select id="getApiPathByRoleCodes" resultType="com.stone.it.rcms.auth.vo.AuthApisVO">
    select
    t1.api_path as apiPath,t1.api_name as apiName,t1.api_method as apiMethod,t1.api_type as
    apiType,t1.auth_code as authCode
    from tpl_permission_t t1
    join tpl_role_permission_t t2 on t1.auth_code=t2.auth_code
    where t2.role_code in
    <foreach close=")" collection="list" item="item" open="(" separator=",">
      #{item}
    </foreach>
    order by t1.auth_code
  </select>

  <select id="findApiPathsByPaths" resultType="com.stone.it.rcms.auth.vo.AuthApisVO">
    select auth_code as authCode,api_name as apiName,api_path as apiPath,api_method as
    apiMethod,api_type as apiType
    from tpl_permission_t where concat_ws('_', api_method, api_path) in
    <foreach close=")" collection="list" item="item" open="(" separator=",">
      #{item}
    </foreach>
  </select>

  <select id="findAccountEnterpriseById"
    resultType="com.stone.it.rcms.auth.vo.ResDetailVO">
    select
    id,
    type,
    name,
    code
    from tpl_enterprise_t
    where id = #{enterpriseId}
  </select>

  <select id="findPermissionsByRoleList" resultType="java.lang.String">
    select auth_code from tpl_role_permission_t where role_code in
    <foreach close=")" collection="list" item="item" open="(" separator=",">
      #{item}
    </foreach>
  </select>

</mapper>