<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.stone.it.rcms.mifi.device.dao.IDeviceDataPlanDao">

    <sql id="query_base">
        select
        ddp.tenant_id as tenantId,
        ddp.enterprise_id as enterpriseId,
        ddp.device_dp_id as dpOrderId,
        ddp.data_plan_no as dataPlanNo,
        ddp.order_no as orderNo,
        ddp.device_sn as deviceSn,
        ddp.effective_time as effectiveTime,
        ddp.expire_time as expireTime,
        ddp.total_flow as totalFlow,
        ddp.remain_flow as remainFlow,
        ddp.used_flow as usedFlow,
        ddp.is_limit_speed as isLimitSpeed,
        ddp.limit_speed as limitSpeed,
        ddp.is_available as isAvailable,
        ddp.create_time as createDate,
        ddp.update_time as updateDate,
        ddp.CREATED_BY as createBy,
        ddp.UPDATED_BY as updateBy
        from tpl_mifi_device_dp_t ddp
    </sql>
    <sql id="query_page_condition">
        <where>
            tenant_id = #{param1.tenantId,jdbcType=VARCHAR}
            <if test="param1.enterpriseId != null and param1.enterpriseId != ''">
                AND enterprise_id = #{param1.enterpriseId,jdbcType=VARCHAR}
            </if>
            <if test="param3.size() != 0">
                and enterprise_id in
                <foreach close=")" collection="param3" item="item" open="(" separator=",">
                    #{item.id,jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="param1.deviceSn != null and param1.deviceSn != ''">
                AND device_sn like concat('%',#{param1.deviceSn,jdbcType=VARCHAR},'%')
            </if>
            <if test="param1.dataPlanNo != null and param1.dataPlanNo != ''">
                AND data_plan_no in (
                select data_plan_no from tpl_mifi_data_plan_t data_plan_name like
                concat('%',#{param1.dataPlanNo,jdbcType=VARCHAR},'%')
                )
            </if>
        </where>
    </sql>
    <select id="findPageDeviceDpResult" resultType="com.stone.it.rcms.mifi.device.vo.DeviceDpVO">
        <include refid="query_base"/>
        <include refid="query_page_condition"/>
        order by ddp.created_time desc
        limit #{param2.startIndex},#{param2.endIndex}
    </select>

    <select id="findPageDeviceDpResultCount" resultType="int">
        select count(1) from tpl_mifi_device_dp_t ddp
        <include refid="query_page_condition"/>
    </select>

    <insert id="createDeviceDp">

    </insert>

    <select id="findDeviceDpDetail" resultType="com.stone.it.rcms.mifi.device.vo.DeviceDpVO">
        <include refid="query_base"/>
        where ddp.device_dp_id = #{dpOrderId,jdbcType=VARCHAR}
        and ddp.tenant_id = #{tenantId,jdbcType=VARCHAR}
        and ddp.enterprise_id = #{currentEnterpriseId,jdbcType=VARCHAR}
    </select>

    <select id="findDeviceDpList" resultType="com.stone.it.rcms.mifi.device.vo.DeviceDpVO">
        <include refid="query_base"/>
        where ddp.device_sn = #{deviceSn,jdbcType=VARCHAR}
        and ddp.tenant_id = #{tenantId,jdbcType=VARCHAR}
        and ddp.enterprise_id = #{currentEnterpriseId,jdbcType=VARCHAR}
        and ddp.is_available = #{isAvailable,jdbcType=VARCHAR}
    </select>

    <select id="refundDeviceDp" resultType="int">
        update tpl_mifi_device_dp_t
        set is_available = #{isAvailable,jdbcType=VARCHAR}
        where order_no = #{orderNo,jdbcType=VARCHAR}
    </select>

</mapper>