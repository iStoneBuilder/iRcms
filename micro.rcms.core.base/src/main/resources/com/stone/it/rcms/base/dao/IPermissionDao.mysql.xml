<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.stone.it.rcms.base.dao.IPermissionDao">

  <delete id="deletePermissionNotInList">
    delete from tpl_permission_t where concat_ws('_', api_method, api_path) not in
    <foreach close=")" collection="list" item="item" open="(" separator=",">
      #{item}
    </foreach>
  </delete>
  <delete id="deleteApisRelationAuth">
    delete from tpl_role_permission_t rp
    where rp.auth_code not in
    (select auth_code from tpl_permission_t p where p.auth_code is not null)
  </delete>

  <insert id="createPermission">
    insert into
    tpl_permission_t(auth_code,api_code,api_name,api_path,api_method,api_type,open_api,
    created_time,updated_time,created_by,updated_by)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.authCode},#{item.code},#{item.name},#{item.path,jdbcType=VARCHAR},#{item.method},
      #{item.type},#{item.isOpenApi},now(),now(),#{item.createBy},#{item.updateBy})
    </foreach>
  </insert>
  <insert id="createSuperAdminAuth">
    insert into
    tpl_role_permission_t(role_code,auth_code,created_time,updated_time,created_by,updated_by)
    values
    <foreach collection="list" item="item" separator=",">
      (#{roleCode},#{item},now(),now(),'system','system')
    </foreach>
  </insert>

  <select id="findPermissionPageResultCount" resultType="int">
    select count(*) from tpl_permission_t
    <include refid="query_condition"/>
  </select>

  <select id="findPermissionListByPaths"
    resultType="com.stone.it.rcms.core.vo.PermissionVO">
    select auth_code as authCode,api_name as apiName,api_path as apiPath,api_method as
    apiMethod,api_type as apiType
    from tpl_permission_t where concat_ws('_', api_method, api_path) in
    <foreach close=")" collection="apis" item="item" open="(" separator=",">
      #{item}
    </foreach>
  </select>

  <select id="findPermissionPageResult"
    resultType="com.stone.it.rcms.core.vo.PermissionVO">
    <include refid="query_base"/>
    <include refid="query_condition"/>
    order by api_name desc,auth_code desc
    limit #{param2.startIndex}, #{param2.endIndex}
  </select>

  <sql id="query_condition">
    <where>
      <if test="param1.code!= null and param1.code!= ''">
        and api_code like concat('%',#{param1.code,jdbcType=VARCHAR},'%')
      </if>
      <if test="param1.name!= null and param1.name!= ''">
        and api_name like concat('%',#{param1.name,jdbcType=VARCHAR},'%')
      </if>
      <if test="param1.path!= null and param1.path!= ''">
        and api_path like concat('%',#{param1.path,jdbcType=VARCHAR},'%')
      </if>
      <if test="param1.type!= null and param1.type!= ''">
        and api_type = #{param1.type,jdbcType=VARCHAR}
      </if>
      <if test="param1.method!= null and param1.method!= ''">
        and api_method = #{param1.method,jdbcType=VARCHAR}
      </if>
      <if test="param1.authCode!= null and param1.authCode!= ''">
        and auth_code like concat('%',#{param1.authCode,jdbcType=VARCHAR},'%')
      </if>
      <if test="param1.isOpenApi!= null and param1.isOpenApi!= ''">
        and open_api = #{param1.isOpenApi,jdbcType=VARCHAR}
      </if>
    </where>
  </sql>

  <sql id="query_base">
    select
    api_code as code,
    api_name as name,
    api_path as path,
    api_type as type,
    api_method as method,
    auth_code as authCode,
    open_api as isOpenApi
    from tpl_permission_t
  </sql>

</mapper>