<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.stone.it.rcms.scheduler.dao.ISchedulerGroupDao">

  <!-- 删除分组信息 -->
  <delete id="deleteQuartzGroup">
    delete from tpl_corn_quartz_group_t where QUARTZ_GROUP_ID = #{groupId} and tenant_id =
    #{tenantId}
  </delete>
  <!-- 创建分组信息 -->
  <insert id="createQuartzGroup">
    insert into
    tpl_corn_quartz_group_t
    (tenant_id,QUARTZ_GROUP_ID,
    QUARTZ_GROUP_CODE,QUARTZ_GROUP_NAME,is_authorized,auth_key,request_type,
    request_path,request_params,request_header,CREATED_TIME,UPDATED_TIME,CREATED_BY, UPDATED_BY)
    values
    (#{tenantId,jdbcType=VARCHAR},#{quartzGroupId},#{quartzGroupCode},#{quartzGroupName},#{isAuthorized},
    #{authKey},#{requestType},#{requestPath},#{requestParams},#{requestHeaders},
    now(),now(),#{currentUserId},#{currentUserId})
  </insert>

  <!-- 分页查询分组信息 -->
  <select id="findQuartzGroupPageResult"
    resultType="com.stone.it.rcms.scheduler.vo.QuartzGroupVO">
    <include refid="query_base_sql"/>
    <include refid="query_condition_sql"/>
    limit #{param2.startIndex},#{param2.endIndex}
  </select>

  <select id="findQuartzGroupPageResultCount" resultType="integer">
    select count(1) from tpl_corn_quartz_group_t
    <include refid="query_condition_sql"/>
  </select>

  <select id="findQuartzGroupList"
    resultType="com.stone.it.rcms.scheduler.vo.QuartzGroupVO">
    <include refid="query_base_sql"/>
    where tenant_id = #{tenantId}
  </select>

  <!-- 查询分组详情信息 -->
  <select id="findQuartzGroupInfoByCode"
    resultType="com.stone.it.rcms.scheduler.vo.QuartzGroupVO">
    <include refid="query_base_sql"/>
    where QUARTZ_GROUP_CODE = #{quartzGroupCode}
  </select>

  <select id="findQuartzGroupInfoById"
    resultType="com.stone.it.rcms.scheduler.vo.QuartzGroupVO">
    <include refid="query_base_sql"/>
    where QUARTZ_GROUP_ID = #{quartzGroupId}
    and tenant_id = #{tenantId}
  </select>

  <select id="checkGroupCodeExistByCode"
    resultType="com.stone.it.rcms.scheduler.vo.QuartzGroupVO">
    <include refid="query_base_sql"/>
    where QUARTZ_GROUP_CODE = #{quartzGroupCode}
  </select>

  <select id="checkGroupNameExistByCodeName"
    resultType="com.stone.it.rcms.scheduler.vo.QuartzGroupVO">
    <include refid="query_base_sql"/>
    where QUARTZ_GROUP_CODE != #{quartzGroupCode}
    and QUARTZ_GROUP_NAME = #{quartzGroupName}
  </select>

  <sql id="query_base_sql">
    SELECT
    QUARTZ_GROUP_ID as quartzGroupId,
    QUARTZ_GROUP_CODE as quartzGroupCode,
    QUARTZ_GROUP_NAME as quartzGroupName,
    IS_AUTHORIZED as isAuthorized,
    AUTH_KEY as authKey,
    REQUEST_TYPE as requestType,
    REQUEST_PATH as requestPath,
    REQUEST_PARAMS as requestParams,
    REQUEST_HEADER as requestHeaders,
    CREATED_TIME as createDate,
    CREATED_BY as createBy,
    UPDATED_TIME as updateDate,
    UPDATED_BY as updateBy
    FROM
    tpl_corn_quartz_group_t
  </sql>

  <sql id="query_condition_sql">
    <where>
      tenant_id = #{param1.tenantId,jdbcType=VARCHAR}
      <if test="param1.quartzGroupCode != null and param1.quartzGroupCode != ''">
        and QUARTZ_GROUP_CODE like CONCAT('%',#{param1.quartzGroupCode,jdbcType=VARCHAR},'%')
      </if>
      <if test="param1.quartzGroupName != null and param1.quartzGroupName != ''">
        and QUARTZ_GROUP_NAME like CONCAT('%',#{param1.quartzGroupName,jdbcType=VARCHAR},'%')
      </if>
      <if test="param1.isAuthorized != null and param1.isAuthorized != ''">
        and IS_AUTHORIZED = #{param1.isAuthorized,jdbcType=VARCHAR}
      </if>
      <if test="param1.quartzGroupId != null and param1.quartzGroupId != ''">
        and QUARTZ_GROUP_ID = #{param1.quartzGroupCode,jdbcType=VARCHAR}
      </if>
    </where>
  </sql>

  <!-- 更新分组信息 -->
  <update id="updateQuartzGroup">
    update tpl_corn_quartz_group_t
    set
    <if test="quartzGroupName != null and quartzGroupName != ''">
      QUARTZ_GROUP_NAME = #{quartzGroupName},
    </if>
    <if test="isAuthorized != null and isAuthorized != ''">
      IS_AUTHORIZED = #{isAuthorized},
    </if>
    <if test="authKey != null and authKey != ''">
      AUTH_KEY = #{authKey},
    </if>
    <if test="requestType != null and requestType != ''">
      REQUEST_TYPE = #{requestType},
    </if>
    <if test="requestPath != null and requestPath != ''">
      REQUEST_PATH = #{requestPath},
    </if>
    <if test="requestParams != null and requestParams != ''">
      REQUEST_PARAMS = #{requestParams},
    </if>
    <if test="requestHeaders != null and requestHeaders != ''">
      REQUEST_HEADER = #{requestHeaders},
    </if>
    UPDATED_TIME = now(),
    UPDATED_BY = #{currentUserId}
    where QUARTZ_GROUP_ID = #{quartzGroupId}
  </update>

</mapper>